/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cargo.ui;

import com.cargo.storage.dao.OrderDAO;
import com.cargo.storage.dao.ProductDAO;
import com.cargo.storage.dao.StorehouseDAO;
import com.cargo.storage.model.Location;
import com.cargo.storage.model.Order;
import com.cargo.storage.model.Products;
import com.cargo.storage.model.Storehouse;
import com.cargo.tablemodels.OrderTableModel;
import com.cargo.tablemodels.ProductsOnOrderTableModel;
import com.cargo.tablemodels.ProductsOnStoreTableModel;
import com.cargo.tablemodels.StorehouseTableModel;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yura
 */
public class workerFrame extends javax.swing.JFrame {

    /**
     * Creates new form userFrame
     */
    StorehouseTableModel model;
    ProductsOnStoreTableModel prodModel;
    ProductsOnOrderTableModel prodordModel;
    OrderTableModel ordModel;
    StorehouseDAO strhdao;
    OrderDAO orddao;
    ProductDAO proddao;
    public static String password = "12";
    
    public workerFrame() throws Exception {
        
        List<Storehouse> storehouses = null;
        List<Order> orders = null;
        strhdao = new StorehouseDAO();
        storehouses = strhdao.getAllStorehouses();
        
        orddao = new OrderDAO();
        proddao = new ProductDAO();
        
        orders = orddao.getAllOrders();
               
        this.ordModel = new OrderTableModel(orders);
	this.model = new StorehouseTableModel(storehouses);
       
        initComponents();
        
    }
    
    
    
    
       public void refreshStorehouseView() {

		try {
			List<Storehouse> storehouses = strhdao.getAllStorehouses();

			// create the model and update the "table"
			model = new StorehouseTableModel(storehouses);

			jTableStore.setModel(model);
                        
		} catch (Exception exc) {
			JOptionPane.showMessageDialog(this, "Error: " + exc, "Error",
					JOptionPane.ERROR_MESSAGE);
		}
		
	}

       public void refreshProdOnStoreView(int idStore) {
       
            try{
                                       
                        List<Products> productsOnStore = null;
                        productsOnStore = strhdao.getAllProductsOnStore(idStore);                    
//                        jbtnDelStore.setEnabled(true);
                        jbtnAddProduct.setEnabled(true);
                        prodModel = new ProductsOnStoreTableModel(productsOnStore);                         
                        jTableProdOnStore.setModel(prodModel);     
                                               
                    }
            catch(Exception exc){
                JOptionPane.showMessageDialog(this, "Error: " + exc, "Error",
					JOptionPane.ERROR_MESSAGE);
            
            }
          
       
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStore = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProdOnStore = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCity = new javax.swing.JLabel();
        jRegion = new javax.swing.JLabel();
        jCountry = new javax.swing.JLabel();
        jAddress = new javax.swing.JLabel();
        jPhone = new javax.swing.JLabel();
        jbtnAddProduct = new javax.swing.JButton();
        jbtnDelProd = new javax.swing.JButton();
        jbtnChangeProd = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTableStore.setAutoCreateRowSorter(true);
        jTableStore.setModel(model);
        jScrollPane1.setViewportView(jTableStore);

        jTableStore.getSelectionModel().addListSelectionListener( new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                try{
                    int row = jTableStore.getSelectedRow();
                    int index = Integer.parseInt(model.getValueAt(row, 0).toString());
                    //System.out.println(row);
                    List<Products> productsOnStore = null;
                    Location locationOfStore = null;
                    productsOnStore = strhdao.getAllProductsOnStore(index);
                    locationOfStore = strhdao.getLocationForStore(index);
                    // jbtnDelStore.setEnabled(true);
                    jbtnAddProduct.setEnabled(true);

                    prodModel = new ProductsOnStoreTableModel(productsOnStore);

                    jCity.setText("Город:   " + locationOfStore.getCity());
                    jRegion.setText("Область:   " + locationOfStore.getRegion());
                    jCountry.setText("Страна:   " + locationOfStore.getCountry());
                    jAddress.setText("Адрес:   " + locationOfStore.getAddress());
                    jPhone.setText("Телефон:   " + locationOfStore.getPhone());

                    jTableProdOnStore.setModel(prodModel);
                } catch(Exception e){}

            }

        } );

        jScrollPane2.setViewportView(jTableProdOnStore);

        jLabel1.setText("Список продуктов на складе:");

        jLabel2.setText("Склады:");

        jLabel3.setText("Подробности:");

        jCity.setText(" ");

        jRegion.setText(" ");

        jCountry.setText(" ");

        jAddress.setText(" ");

        jPhone.setText(" ");

        jbtnAddProduct.setText("Добавить продукт");
        jbtnAddProduct.setEnabled(false);
        jbtnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddProductActionPerformed(evt);
            }
        });

        jbtnDelProd.setText("Удалить продукт");
        jbtnDelProd.setEnabled(false);
        jbtnDelProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDelProdActionPerformed(evt);
            }
        });

        jbtnChangeProd.setText("Изменить количество");
        jbtnChangeProd.setEnabled(false);
        jbtnChangeProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChangeProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(290, 290, 290))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCity)
                                            .addComponent(jRegion)
                                            .addComponent(jCountry)
                                            .addComponent(jAddress)
                                            .addComponent(jPhone))))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnChangeProd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnDelProd, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jbtnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRegion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCountry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPhone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jbtnAddProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jbtnDelProd)
                    .addComponent(jbtnChangeProd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTableProdOnStore.getSelectionModel().addListSelectionListener( new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                try{
                    jbtnDelProd.setEnabled(true);
                    jbtnChangeProd.setEnabled(true);
                } catch(Exception e){}

            }

        } );

        jMenu1.setText("Файл");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Смена");

        jMenuItem1.setText("Смена пользователя");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnChangeProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChangeProdActionPerformed
        int rowProd = jTableProdOnStore.getSelectedRow();
        int indexProd = Integer.parseInt(prodModel.getValueAt(rowProd, 0).toString());
        int count = Integer.parseInt(prodModel.getValueAt(rowProd, 3).toString());
        
        int rowStore = jTableStore.getSelectedRow();
        int indexStore = Integer.parseInt(model.getValueAt(rowStore, 0).toString());
        ChangeCount chCount = null;
        try {
            chCount = new ChangeCount(this, indexStore, indexProd, count);
        } catch (Exception ex) {
            Logger.getLogger(workerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        chCount.setVisible(true);
    }//GEN-LAST:event_jbtnChangeProdActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            this.dispose();
            orddao.closeConnection();
            strhdao.closeConnection();
                    
            Authorization auth = new Authorization(this, true);
            auth.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(workerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jbtnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddProductActionPerformed
       
        int rowStore = jTableStore.getSelectedRow();
        int indexStore = Integer.parseInt(model.getValueAt(rowStore, 0).toString());
        AddProdToStore apts = new AddProdToStore(this, indexStore);
        apts.setVisible(true);
    }//GEN-LAST:event_jbtnAddProductActionPerformed

    private void jbtnDelProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDelProdActionPerformed
        int rowProd = jTableProdOnStore.getSelectedRow();
        int indexProd = Integer.parseInt(prodModel.getValueAt(rowProd, 0).toString());
        
        int rowStore = jTableStore.getSelectedRow();
        int indexStore = Integer.parseInt(model.getValueAt(rowStore, 0).toString());
        
        try{
            proddao.deleteProdFromStorehouse(indexStore, indexProd);
            this.refreshProdOnStoreView(indexStore);
        }
        catch(SQLException exc){
            Logger.getLogger(workerFrame.class.getName()).log(Level.SEVERE, null, exc);
        }
        
    }//GEN-LAST:event_jbtnDelProdActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAddress;
    private javax.swing.JLabel jCity;
    private javax.swing.JLabel jCountry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jPhone;
    private javax.swing.JLabel jRegion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableProdOnStore;
    private javax.swing.JTable jTableStore;
    private javax.swing.JButton jbtnAddProduct;
    private javax.swing.JButton jbtnChangeProd;
    private javax.swing.JButton jbtnDelProd;
    // End of variables declaration//GEN-END:variables
}
